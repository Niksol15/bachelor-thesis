#let fontsize = 14pt
#show heading: set text(size: fontsize)
#show heading.where(level: 1): it => align(center)[#upper(it) \ ]
#set text(size: fontsize, font: "Times New Roman", lang: "ua")
#show raw: set text(size: fontsize)
#show math.equation: set text(size: 14pt)
#set page(
  paper: "a4",
  margin: (
    top: 20mm,
    bottom: 20mm,
    left: 25mm,
    right: 10mm
  ),
  header: align(right)[#counter(page).display(i => if i != 1 [#i])]
)

#align(center)[
  *КИЇВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ \
  ІМЕНІ ТАРАСА ШЕВЧЕНКА* \
  Факультет комп’ютерних наук та кібернетики \
  Кафедра математичної інформатики \ \ \
  *Кваліфікаційна робота \
  на здобуття ступеня бакалавра* \
  за освітньо-професійною програмою “Інформатика” \
  спеціальності 122 Комп'ютерні науки на тему: \ \
  *ІМПЛЕМЕНТАЦІЯ КРИПТОСИСТЕМ НА ОСНОВІ ЕЛІПТИЧНИХ КРИВИХ* \ \ \
]

#let signature = [
  \
  #line(length: 100%)
  #align(center, text(size: 0.8em, "(підпис)"))
]

#grid(
  columns: (70%, 30%),
  [
    Виконав студент 4-го курсу \
    Солонко Нікіта Владиславович
  ],
  signature,
  [
    \
    Науковий керівник: \
    Член-кореспондент НАН України, професор \
    Анісімов Анатолій Васильович
  ],
  [\ \ #signature],
)

\ \
#grid(
  columns: (40%, 60%),
  [],
  [
    Засвідчую, що в цій роботі немає запозичень з
    праць інших авторів без відповідних посилань.

    #grid(
      columns: (50%, 50%),
      align(center)[\ Студент],
      signature,
    )
  ]
)

#align(center + bottom)[Київ -- 2023]
#pagebreak()

#heading(outlined: false)[Реферат]

Обсяг роботи:
#locate(loc => counter(page).final(loc).at(0)) сторінок,
#locate(loc => counter(figure.where(kind: image)).final(loc).at(0)) ілюстрацій,
#locate(loc => counter(figure.where(kind: table)).final(loc).at(0)) таблиць,
#locate(loc => counter(ref).final(loc).at(0)) використаних джерел.

TBD.

#pagebreak()

#outline()

#pagebreak()

= Скорочення та умовні позначення

/ ECC: Elliptic curve cryptography;
/ EC: Elliptic curve;
/ SIMD: Single instruction multiple data;
/ DLP: Discrete Logarithm Problem, задача дискретного логарифму;
/ GNFS: General Number Field Sieve;

#pagebreak()

#let leading = 18pt
#set par(leading: leading, first-line-indent: 1.27cm,)
#show par: set block(spacing: leading)
#show outline: set par(first-line-indent: 0mm)
#show terms: set par(first-line-indent: 0mm)

= Вступ

*Оцінка сучасного стану об’єкта дослідження* 

На даний момент, окрім того, що застосування еліптичних кривих у криптографії активно досліджується в академічних роботах, існує безліч прикладних
реалізацій ECC що використовуються повсюдно. Більш того, криптосистеми з відкритим ключем, що використовують еліптичні криві, потроху стають
популярнішими за, найбільш розповсюджений зараз, RSA. Так, наприклад, нові версії ssh рекомендують використовувати ключі Ed25519, що побудовані
на еліптичних кривих Едварда, замість RSA. Аналогічні рекомендації зараз дають такі сервіси як: GitLab, GitHub, Amazon Web Services, Google
Cloud Platform і багато інших.

*Актуальність роботи та підстави для її виконання*

Як було зазначено раніше, криптосистеми з відкритим ключем побудовані на основі еліптичних кривих вже активно використовуються, але все ще 
перебувають у стані активного розвитку. Так, наприклад, стаття @EdDSA в якій була запропонована одна з найбільш популярних зараз еліптичних
кривих Ed25519 і алгоритм підпису/верифікації на її основі EdDSA була написана в 2012 році, що для криптографії недавно. Також зараз 
існує багато програмних реалізацій таких криптосистем, але, у зв’язку зі складністю їх імплементації, не всі вони є цілком безпечними. Варто
зазначити, що  з кожним роком архітектура обчислювальних систем розвивається: оптимізуються існуючі інструкції та додаються нові, що відкриває
можливості як для оптимізації існуючих реалізацій, так і для написання нових - кращих. Наприклад, в архітектурі x64 апаратна підтримка SIMD
обчислень з 512 бітними регістрами AVX-512 з’явилася в 2013 році, вже після виходу статті з описом Ed25519.


*Мета й завдання роботи*

Метою роботи є дослідження застосування еліптичних кривих у сучасній криптографії, і як результат дослідження імплементувати криптографічну
бібліотеку для роботи з еліптичними кривими та порівняти її з існуючими реалізаціями.

*Можливі сфери застосування*

Оскільки програмна реалізація яку я розроблю у рамках цієї роботи не буде сертифікована, то її не варто буде застосовувати в реальних
системах на які може бути здійснена атака, але вона може бути застосована у навчальних і академічних цілях. В перспективі така бібліотека
може бути застосована всюди де потрібна безпечна комунікація, в умовах коли можливе прослуховування, або втручання в  канали зв’язку, між
сутностями які ще не узгодили симетричний ключ. Наприклад: TLS, HTTPS і так далі. 

#pagebreak()

#set heading(numbering: (..nums) => {
  if nums.pos().len() == 1 {
    "Розділ " + str(nums.pos().at(0)) + "."
  } else {
    numbering("1.", ..nums)
  }
})

= ЕЛІПТИЧНІ КРИВІ
== Переваги над $Z_p^*$
\

Під $Z_p^*$ мається увазі мультиплікативна група лишків за модулем p, де p - просте число.

Розглянемо мотивацію використання нового криптографічного примітиву, коли вже побудовано і імплементовано багато криптосистем на основі
$Z_p^*$, таких як: Diffie-Hellman, ElGamal, RSA і багато інших. Проблема використання таких криптосистем полягає у тому, що вони були 
запропоновані давно: Diffie-Hellman @DH - 1976, RSA @RSA - 1978, ElGamal @ElGamal - 1985. З того часу кратно збільшились обчислювальні
можливості. Частота ядер виросла з кГц до ГГц, кількість ядер збільшилась з одиниць до сотень, з’явилися зручні інструменти для об’єднання
процесорів у кластери. Також, через бажання зламати дані криптосистеми, багато вчених шукали спосіб знайти більш  ефективні алгоритми
розв'язання проблем на які вони спираються. Таким чином у 1993 Ленстра @GNFS придумав ефективний алгоритм розкладання великих чисел на
множники - GNFS(General Number Field Sieve), який може розкласти число $n > 10^100$ за час:
$ exp( ((64/9) ^ (1/3) + o(1)) (log n) ^ (1/3) (log log n) ^ (2/3)) $
Це стало основною проблемою криптосистем на основі $Z_p^*$, тому що він робить вирішення обчислювальних проблем, на які спираються ці
криптосистеми субекспоненційним, замість експоненційних. Варто зазначити, що цей алгоритм не є чисто теоретичною загрозою. За його 
допомогою у 2019 році @BonehShoup було знайдено дискретний логарифм 795 бітного числа. Таким чином, в патенті RSA @RSA рекомендований 
розмір ключів був 200біт, в першій NIST сертифікації - 512 біт, зараз же мінімальний рекомендований розмір - 2048 біт. Важливим також є те,
що GNFS неможливо узагальнити на будь-які скінчені циклічні групи, тому він не зачіпає групу точок еліптичної кривої над скінченним полям
(позначення буде наведено далі), по цій причині найкращий відомий алгоритм для вирішення проблеми дискретного логарифма для групи точок 
еліптичних кривих (ECDLP) займає час $O(sqrt(q))$, де q - розмір групи. Через це розміри ключів що мають однакову безпеку для $Z_p ^ *$ і для 
групи точок кліптичної кривої сильно відрізняються. Порівняльна характеристика безпеки ключа в залежності від розміру ключа RSA/Diffie-Hellman
і ECC:

#figure(
  image("resources/key-size-comparison.jpg"),
  caption: [
    https://www.globalsign.com/en/blog/elliptic-curve-cryptography
  ],
) \

Як можна побачити з наведеної таблиці використання еліптичних кривих дає вагому перевагу, оскільки зменшує розмір ключа, що в свою чергу
зменшує час потрібний на проведення операцій з ключем (що дає виграш у швидкодії), кількість затраченої енергії (що є вагомою перевагою для 
IoT), навантаження на мережу під час передачі ключа і загалом трафік.

Ще однією перевагою криптографії еліптичних кривих є те, що можна використати багато напрацювань з криптографії з відкритим що використовує
$Z_p^*$. Оскільки ECC як складно обчислювальну проблему використовує знаходження дискретного логарифма - DLP(у випадку еліптичних кривих 
вживають термін ECDLP), аналогічно до складно обчислювальної проблеми в Diffie-Hellman і ElGamal. До того еліптичні криві мають додаткову
структуру, яку не має $Z_p ^ *$, що дозволяє побудувати неможливі для $Z_p ^ *$ криптосистеми. Такою додатковую структурою є можливість 
будувати pairing(спарювання точок еліптичних кривих), lattices(алгебраїчні решітки), isogenies(ізогенії). Алгебраїчні решітки і ізогенії
еліптичних кривих зараз активно використовуються для побудови пост-квантових криптосистем з відкритим ключем.


== Загальний огляд еліптичних кривих
\

=== $E slash RR$
\

Існує декілька форм задання еліптичних кривих. Почнемо з найбільш класичної:

Еліптичною кривою $E$ називається множина точок, що є розв'язком рівняння: $y^2 = x^3 + a*x + b$.

Наведене рівняння називають рівнянням Веєрштрасса і, відповідно, дану форму задання еліптичної кривої називають формою Веєрштраса.
Якщо еліптична крива задана над полем $FF$, будемо позначати це як $E slash FF$

#figure(
  image("resources/EC-example.png"),
  caption: [
    Ілюстрація з @MathCrypto
  ],
) \

Перед переходом до еліптичних кривих над скінченими полями, для більш інтуітивного розуміння, розглянемо як "додавати" точки
еліптичної кривої над $RR$, бо це можна легко зобразити графічно. Позначемо операцію додавання точок еліптичної кривої як $plus.circle$ і розглянемо її на прикладі. Нехай $E slash RR$ - це еліптична крива задана рівнянням $y^2 = x^3 - 15x + 18$; Точки $P = (7, 16), Q = (1, 2)$ належать $E$, тоді пряма $L$ що їх сполучає задається рівнянням: $y = 7/3 x - 1/3$. Для того щоб знайти в яких точках

=== $E slash FF_p$
\ 

Перейдемо до еліптичних кривих що застосовуються у криптографії - еліптичних кривих над скінченимими полями.
Почнемо з визначення:

Нехай $p > 3$ - простe число. Тоді еліптичною кривою $E$ визначеною над $FF_p$ є множина розв'язків рівняння

$y^2 = x^3 + a*x + b$, де $a, b in FF_p$ задовільняють умову $4*a^3 + 27*b^2 eq.not 0$. Ця умова потрібна щоб впевнетись що рівння $x^3 +a*x + b = 0$ має тільки один корінь.

Множиною точок еліптичною кривої $E slash FF_p$ є множина точок що задовільняють рівняння кривої і спеціальна точка $cal(O)$, яку називають точкою на нескінченості. Позначається ця множина $E(F_p))$.

Розглянемо приклад. Нехай $E: y^2 = x^3 + 1$ визначена на $FF_(11)$, тоді: $E(FF_(11)) = { cal(O), (−1, 0), (0, plus.minus 1), (2, plus.minus 3), (5, plus.minus 4), (7, plus.minus 5), (9, plus.minus 2)$


== Характеристики еліптичних кривих
== Приклади еліптичних кривих у сучасній криптографії

=== secp256r1 (P256)
=== secp256k1 (Bitcoin curve)
=== Curve25519

#pagebreak()

= ЗАСТОСУВАННЯ У КРИПТОГРАФІЇ

== Протоколи узгодження ключів
== Протоколи підпису і верифікації.

#pagebreak()

= ІМПЛЕМЕНТАЦІЯ БІБЛІОТЕКИ

#pagebreak()

= ПОРІВНЯННЯ З ІСНУЮЧИМИ БІБЛІОТЕКАМИ

#pagebreak()

#set heading(numbering: none)

= Висновки
#pagebreak()

= Перелік джерел посилання
#bibliography(title: none, "sources.yml")